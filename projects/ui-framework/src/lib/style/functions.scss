@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@function add-unit($value) {
  @if unitless($value) {
    $value: $value * 1px;
  }
  @return $value;
}

@function contains($this, $that) {
  @if type-of($this) == 'string' {
    @return str-index($this, $that);
  }
  @if type-of($this) == 'list' {
    @return index($this, $that);
  }
}

@function map-get-deep($map, $keys...) {
  @if length($keys) == 1 {
    $keys: nth($keys, 1);
  }
  $length: length($keys);
  $get: map-get($map, nth($keys, 1));
  @if $length > 1 {
    @for $i from 2 through $length {
      @if $get != null and type-of($get) == 'map' {
        $get: map-get($get, nth($keys, $i));
        @if $get == null {
          @return null;
        }
      } @else {
        @return null;
      }
    }
  }
  @return $get;
}

@function uri-encode-color($color) {
  @if type-of($color) == 'color' {
    $color: unquote('%23' + str-slice(ie-hex-str($color), 4));
  }
  @return $color;
}

@function 8x (times: 1) {
  @return 8px * times;
}

@function base8(num: 0) {
  @return round(num/8) * 8px;
}
