$preloader-svg: url("data:image/svg+xml,%3Csvg viewBox='0 0 210 60' width='210' height='60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23d2d2d2'%3E%3Ccircle cx='30' cy='30' r='30'%3E%3Canimate attributeName='fill-opacity' dur='1500ms' repeatCount='indefinite' values='0;.6;1;1;1;.6;0;0'/%3E%3Canimate attributeName='r' dur='1500ms' repeatCount='indefinite' values='0;0;10;20;30;20;10;0'/%3E%3C/circle%3E%3Ccircle cx='105' cy='30' r='30'%3E%3Canimate attributeName='fill-opacity' dur='1500ms' repeatCount='indefinite' values='0;0;.6;1;1;1;.6;0'/%3E%3Canimate attributeName='r' dur='1500ms' repeatCount='indefinite' values='10;0;0;10;20;30;20;10'/%3E%3C/circle%3E%3Ccircle cx='180' cy='30' r='30'%3E%3Canimate attributeName='fill-opacity' dur='1500ms' repeatCount='indefinite' values='.6;0;0;.6;1;1;1;.6'/%3E%3Canimate attributeName='r' dur='1500ms' repeatCount='indefinite' values='20;10;0;0;10;20;30;20'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");

$preloader-svg-wht: url("data:image/svg+xml,%3Csvg viewBox='0 0 210 60' width='210' height='60' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle fill='white' cx='30' cy='30' r='30'%3E%3Canimate attributeName='fill-opacity' dur='1500ms' repeatCount='indefinite' values='0;.6;1;1;1;.6;0;0' /%3E%3Canimate attributeName='r' dur='1500ms' repeatCount='indefinite' values='0;0;10;20;30;20;10;0' /%3E%3C/circle%3E%3Ccircle fill='white' cx='105' cy='30' r='30'%3E%3Canimate attributeName='fill-opacity' dur='1500ms' repeatCount='indefinite' values='0;0;.6;1;1;1;.6;0' /%3E%3Canimate attributeName='r' dur='1500ms' repeatCount='indefinite' values='10;0;0;10;20;30;20;10' /%3E%3C/circle%3E%3Ccircle fill='white' cx='180' cy='30' r='30'%3E%3Canimate attributeName='fill-opacity' dur='1500ms' repeatCount='indefinite' values='.6;0;0;.6;1;1;1;.6' /%3E%3Canimate attributeName='r' dur='1500ms' repeatCount='indefinite' values='20;10;0;0;10;20;30;20' /%3E%3C/circle%3E%3C/svg%3E%0A");

$preloader-svg-bob: url("data:image/svg+xml,%3Csvg viewBox='0 0 210 60' width='210' height='60' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle fill='%23FFA32B' cx='30' cy='30' r='30'%3E%3Canimate attributeName='fill-opacity' dur='1500ms' repeatCount='indefinite' values='0;.6;1;1;1;.6;0;0' /%3E%3Canimate attributeName='r' dur='1500ms' repeatCount='indefinite' values='0;0;10;20;30;20;10;0' /%3E%3C/circle%3E%3Ccircle fill='%23E42C51' cx='105' cy='30' r='30'%3E%3Canimate attributeName='fill-opacity' dur='1500ms' repeatCount='indefinite' values='0;0;.6;1;1;1;.6;0' /%3E%3Canimate attributeName='r' dur='1500ms' repeatCount='indefinite' values='10;0;0;10;20;30;20;10' /%3E%3C/circle%3E%3Ccircle fill='%239C2442' cx='180' cy='30' r='30'%3E%3Canimate attributeName='fill-opacity' dur='1500ms' repeatCount='indefinite' values='.6;0;0;.6;1;1;1;.6' /%3E%3Canimate attributeName='r' dur='1500ms' repeatCount='indefinite' values='20;10;0;0;10;20;30;20' /%3E%3C/circle%3E%3C/svg%3E%0A");

$preloader-size: 48px 12px;

@mixin mini-preloader(
  $size: $preloader-size,
  // use '&' to insert preloader on non-empty container element
    $base-selector: '&:empty',
  $full-size-selector: '&',
  $abs-pos-center: false,
  $color: default,
  $pseudo: 'before'
) {
  $pseudo-selector: '&:#{$pseudo}';
  @if $pseudo == null {
    $pseudo-selector: '&';
  }

  #{$base-selector} {
    #{$pseudo-selector} {
      @if $pseudo != null {
        content: 'Loading...';
        @include text-hide;
        display: block;
        overflow: hidden;
        @include size($size);
        margin: auto;
      }

      @if $color != white and $color != grey and $color != null {
        background-image: $preloader-svg;
      }
      @if $color == white {
        background-image: $preloader-svg-wht;
      }
      @if $color == grey {
        background-image: $preloader-svg;
      }

      background-size: contain;
      background-position: center;
      background-repeat: no-repeat;

      @if $abs-pos-center {
        position: absolute;
        top: calc(50% - #{nth($size, 2) / 2});
        left: calc(50% - #{nth($size, 1) / 2});
        z-index: 0;
      }
      @content;
    }

    @if ($full-size-selector) {
      #{$full-size-selector} {
        @include flex-align;
        width: 100%;
        flex-grow: 5;
        margin-left: auto;
        margin-right: auto;

        @if ($base-selector== '&' and $full-size-selector== '&') {
          &:only-child {
            height: 100%;
          }
        } @else {
          height: 100%;
        }
      }
    }
  }

  @if $color != white and $color != grey and $color != null {
    @at-root .theme-bob #{$base-selector} {
      #{$pseudo-selector} {
        background-image: $preloader-svg-bob;
      }
    }

    #{$base-selector}.preloader-grey {
      #{$pseudo-selector} {
        background-image: $preloader-svg;
      }
    }

    #{$base-selector}.preloader-white {
      #{$pseudo-selector} {
        background-image: $preloader-svg-wht;
      }
    }
  }

  #{$base-selector}.preloader-sm {
    #{$pseudo-selector} {
      transform: scale(0.7);
    }
  }
}

@mixin preloader-mod-grey($base-selector: '&:empty', $pseudo: 'before') {
  $pseudo-selector: '&:#{$pseudo}';
  @if $pseudo == null {
    $pseudo-selector: '&';
  }

  #{$base-selector} {
    #{$pseudo-selector} {
      background-image: $preloader-svg;
    }
  }
}

@mixin preloader-mod-white(
  $size: $preloader-size,
  $base-selector: '&:empty',
  $pseudo: 'before'
) {
  $pseudo-selector: '&:#{$pseudo}';
  @if $pseudo == null {
    $pseudo-selector: '&';
  }

  #{$base-selector} {
    #{$pseudo-selector} {
      background-image: $preloader-svg-wht;
    }
  }
}

@mixin preloader-mod-sm($base-selector: '&:empty', $pseudo: 'before') {
  $pseudo-selector: '&:#{$pseudo}';
  @if $pseudo == null {
    $pseudo-selector: '&';
  }

  #{$base-selector} {
    #{$pseudo-selector} {
      transform: scale(0.7);
    }
  }
}
