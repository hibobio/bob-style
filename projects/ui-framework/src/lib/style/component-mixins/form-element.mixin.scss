$wrap-height: 44px;
$input-height: 42px;
$input-padding: 15px;
$label-height: 18px;
$label-color: $grey-800;
$label-hint-margin: 6px;
$input-border-color: $grey-500;
$input-focus-border-color: $grey-700;

@mixin form-element-margins {
  margin: 0;
}

@mixin transfer-margins($from: 'b-input') {
  @include form-element-margins;

  &::ng-deep {
    #{$from} {
      margin: 0;
    }
  }
}

@mixin align-to-input {
  height: $wrap-height;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-self: flex-start;

  :host-context(.has-label) & {
    height: $wrap-height + $label-height + $label-hint-margin;
    padding-top: ($label-height + $label-hint-margin);
  }
}

@mixin input-border-colors(
  $selector: '&',
  $add: '',
  $error-class: '.error',
  $warn-class: '.warn'
) {
  @if $warn-class {
    #{$selector}#{$warn-class}#{$add} {
      border-color: $color-warn;
    }
  }
  @if $error-class {
    #{$selector}#{$error-class}#{$add} {
      border-color: $color-error;
    }
  }
}

@mixin input-required($selector: '&') {
  &:after {
    content: ' *';
    display: inline-block;
    margin-left: 1px;
  }
}

@mixin input-basics {
  box-sizing: border-box;
  display: block;
  min-width: 0;
  flex-grow: 1;
  padding: 0 $input-padding;
  border: 0;
  border-color: inherit;
  border-radius: inherit;
  margin: 0;
  outline: 0;
  @include b-body(
    $lineHeight: null,
    $color: $body-text-color,
    $addCssVars: false
  );
  background: transparent;
  height: $input-height;
  line-height: $input-height;
  text-overflow: ellipsis;
}

@mixin bFormElement-label($empty-rule: true) {
  box-sizing: border-box;
  display: block;
  min-height: $label-height;
  margin: 0 0 $label-hint-margin 0;
  @include b-body($color: $label-color, $addCssVars: true);

  @if $empty-rule {
    &:empty {
      display: none;
    }
  }
}

@mixin bFormElement-basics {
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  text-align: left;
  max-width: 100%;
  min-width: 0;
  user-select: none;
  @include form-element-margins;
}

@mixin bFormElement {
  :host {
    @include bFormElement-basics;
  }

  :host ::ng-deep {
    //
    // wrap

    .bfe-wrap {
      box-sizing: border-box;
      display: flex;
      align-items: center;
      background-color: $white;
      min-height: $wrap-height;
      border: 1px solid $input-border-color;
      border-radius: $border-radius;
      transition: box-shadow 0.2s, border-color 0.2s;
      @include b-body($addCssVars: true);

      &:only-child {
        width: 100%;
      }
    }

    // input

    .bfe-input {
      @include input-basics;

      &[data-placeholder] {
        position: relative;
      }

      &::placeholder,
      &[data-placeholder]:before {
        color: $grey-600;
        transition: opacity 0.2s;
        @include text-truncate;
      }

      &:focus::placeholder,
      &[data-placeholder]:focus:before {
        opacity: 0;
      }

      &[data-placeholder]:before {
        @include size;
        @include position(0 0 0 0);
        padding: inherit;
        content: attr(data-placeholder);
      }

      &[readonly] {
        cursor: default;
      }
    }

    // label

    .bfe-label {
      @include bFormElement-label;
    }

    // prefix-suffix

    .has-prefix {
      .bfe-input {
        padding-left: 0;
      }
    }

    .has-suffix {
      .bfe-input {
        padding-right: 0;
      }
    }

    .bfe-prefix,
    .bfe-suffix {
      display: flex;
      align-items: center;

      &:empty:not([class*='b-icon']) {
        display: none;
      }
    }

    .bfe-prefix {
      padding: 0 10px 0 16px;

      &:empty + .bfe-input {
        padding-left: $input-padding;
      }
    }

    .bfe-suffix {
      padding: 0 16px 0 10px;
    }

    // states

    .bfe-wrap:focus,
    .bfe-wrap.focused,
    .focused .bfe-wrap {
      border-color: $input-focus-border-color;
      box-shadow: none;
    }
  }

  :host.disabled {
    @include disabled-state;
  }

  :host.required ::ng-deep {
    .bfe-label {
      @include input-required;
    }
  }

  :host.readonly {
    cursor: default;
  }

  :host {
    @include input-border-colors($add: '::ng-deep .bfe-wrap');
  }
}

@mixin clear-input-suffix {
  .input-icon {
    pointer-events: none;
  }

  .clear-input {
    @include position(50% 0 null null);
    margin-top: -10px;
    background-color: white;
  }

  .bfe-wrap {
    position: relative;
  }

  :host {
    .bfe-suffix.clear-input {
      cursor: pointer;
      outline: 0;

      @include desktop {
        display: none;
        opacity: 0;
        transition: opacity 0.1s;
        transition-delay: 0.1s;
      }
    }

    .bfe-wrap:hover,
    .bfe-wrap.focused {
      .bfe-suffix.clear-input {
        display: block;
        opacity: 1;
      }
    }
  }
}
