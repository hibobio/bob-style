@mixin pseudo {
  content: "";
  display: block;
  pointer-events: none;
}

@mixin size($w, $h: $w) {
  width: $w;
  height: $h;
}

@mixin position($pos: 0 null null 0, $p: absolute) {
  position: $p;
  top: nth($pos,1);
  right: nth($pos,2);
  bottom: nth($pos,3);
  left: nth($pos,4);
}

@function height-from-text($lines, $font-size, $line-height, $add: 0) {
  @return $font-size * $line-height * $lines + $add;
}

@mixin line-clamp($lines, $font-size, $line-height, $minHeight: false, $mod: false) {
  @if not $mod {
    line-height: $line-height;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  max-height: height-from-text($lines, $font-size, $line-height);
  @if $minHeight {
    @if $minHeight != 0 {
      min-height: height-from-text($lines, $font-size, $line-height);
    } @else {
      min-height: 0;
    }
  }
  line-clamp: $lines;
  -webkit-line-clamp: $lines;
}

@mixin text-truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin animate($name, $time: 0.3s, $delay: null, $iterate: 1, $dir: null) {
  animation-name: $name;
  animation-duration: $time;
  animation-fill-mode: both;
  animation-iteration-count: $iterate;
  animation-delay: $delay;
  animation-direction: $dir;
  backface-visibility: hidden;
}

@mixin break-out-border($loc: top bottom, $color: $grey-500, $width: 1px, $use: before) {

  $selector: '&:#{$use}';
  @if (length($loc) > 1 or index($loc, x) or index($loc, y)) {
    $selector: '&:before,&:after';
  }

  $axis: y;
  @if (index($loc, left) or index($loc, right) or index($loc, x)) {
    $axis: x;
  }

  position: relative;

  #{$selector} {
    @include pseudo;
    background-color: $color;

    @if ( $axis == x ) {
      @include size($width, 200vh);
      top: -50%;
    } @else {
      @include size(200vw, $width);
      left: -50%;
    }

    position: absolute;
  }

  @if (($axis == x) and (length($loc) > 1 or $loc == x)) {
    &:before { left: 0; }
    &:after { right: 0; }
  }

  @else if (($axis == y) and (length($loc) > 1 or $loc == y)) {
    &:before { top: 0; }
    &:after { bottom: 0; }
  }

  @else {
    &:#{$use} {
      #{$loc}: 0;
    }
  }

}


@mixin break-out-pseudo(
  $brdr-loc: top bottom,
  $bg-color: null,
  $brdr-width: 1px,
  $brdr-color: $grey-500,
  $use: before,
  $shadow: false,
  $mod: false,
  $add: false
) {

  @if (not $mod) and (not $add) {
    position: relative;
  }

  &:#{$use} {

    @if (not $mod) and (not $add) {
      @include pseudo;
      @include size(200vw, 100%);
      @include position(0 -50% 0 -50%);
      z-index: 0;
      background-color: $bg-color;
    }

    @if ($brdr-width and $brdr-width > 0 and $brdr-color and (not $add)) {
      $grad: '';
      $grad-pos: '';
      $grad-size: '';

      @each $loc in $brdr-loc {
        @if $grad != '' {
          $grad: $grad + ',';
          $grad-pos: $grad-pos + ',';
          $grad-size: $grad-size + ',';
        }
        $grad: $grad + linear-gradient($brdr-color,$brdr-color);
        $grad-pos: $grad-pos + '#{$loc} center';
        @if ($loc == top or $loc == bottom)  {
          $grad-size: $grad-size + '100% #{$brdr-width}';
        }
        @if ($loc == left or $loc == right)  {
          $grad-size: $grad-size + '#{$brdr-width} 100%';
        }
      }

      background-image: unquote($grad);
      background-position: unquote($grad-pos);
      background-size: unquote($grad-size);

    } @else if ($brdr-width == 0) {
      background-image: none;
    }

    @if $shadow {
      box-shadow: $shadow;
    }

    @content;
  }

}
