@import '../../../style/common-imports';
@import '../../../style/icons.mixin';
@import '../avatar.mixin';

$avatarSizeMap: (
  mini: (
    '*': (
      border-width: 2px,
      font-size: $font-size-caption,
    ),
    '.has-hover:hover': (),
    ':after': (
      top: -2px,
      right: -5px,
    ),
    '[data-badge-align="bottom-right"]:after': (
      top: auto,
      bottom: 0,
    ),
  ),
  small: (
    '*': (
      border-width: 2px,
      font-size: $font-size-big-body,
    ),
    '.has-hover:hover': (),
    ':after': (
      top: 0,
      right: 0,
    ),
    '[data-badge-align="bottom-right"]:after': (
      top: auto,
      bottom: 0,
    ),
  ),
  medium: (
    '*': (
      border-width: 3px,
      font-size: $font-size-display-4,
    ),
    '.has-hover:hover': (),
    ':after': (
      top: 3px,
      right: -4px,
    ),
    '[data-badge-align="bottom-right"]:after': (
      top: auto,
      bottom: 0,
      right: 8px,
    ),
  ),
  large: (
    '*': (
      border-width: 3px,
      font-size: $font-size-display-3,
    ),
    '.has-hover:hover': (),
    ':after': (
      top: 6px,
      right: 2px,
    ),
    '[data-badge-align="bottom-right"]:after': (
      top: auto,
      bottom: 6px,
      right: 12px,
    ),
  ),
  xlarge: (
    '*': (
      border-width: 3px,
      font-size: $font-size-display-2,
    ),
    '.has-hover:hover': (),
    ':after': (
      top: 0,
      right: -5px,
    ),
    '[data-badge-align="bottom-right"]:after': (
      top: auto,
      bottom: 6px,
      right: 25px,
    ),
  ),
);

:host {
  --avatar-size: #{map-get($avatarSizes, mini)};
  --avatar-image: none;
  --bg-color: #{$grey-200};

  box-sizing: border-box;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-shrink: 0;
  flex-grow: 0;
  text-align: center;
  position: relative;
  border-radius: 50%;
  transition: transform 0.2s;
  border: 2px solid $white;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  user-select: none;
  font-weight: 700;

  @include size(var(--avatar-size));
  background-color: var(--bg-color);
  background-image: var(--avatar-image);

  &:focus {
    outline: 0;
  }

  &.has-hover {
    cursor: pointer;

    &:hover,
    &:focus {
      transform: scale(1.05);
    }
  }

  &.icon-on-hover {
    color: white;

    &.has-content {
      &:before {
        content: '';
        @include position(0 0 0 0);
        z-index: -1;
      }
    }

    &:before {
      @include size(100%);
      @include flex-align;
      border-radius: 50%;
      background-color: black(0.4);
    }

    &:before,
    ::ng-deep > :first-child {
      transition: opacity 0.2s;
      opacity: 0;
    }

    &:focus,
    &:hover {
      &:before,
      ::ng-deep > :first-child {
        opacity: 1;
      }
    }
  }

  &[data-disabled='true'] {
    @include disabled-state;
  }

  // badge
  &:after {
    display: block;
    border-radius: 50%;
    position: absolute;

    background-color: white;
    background-position: center;
    background-size: 100%;
  }

  &[data-badge-align='bottom-right'] {
    @include icon-size(13px, '&:after');
  }

  @each $size, $sizeElems in $avatarSizeMap {
    @each $elem, $props in $sizeElems {
      $sel: '&[data-size="' + $size + '"]';

      @if $elem != '*' {
        $sel: '#{$sel}#{$elem}';
      }

      @if (contains($elem, ':hover')) {
        $sel: '#{$sel}, #{str-replace($sel, ":hover", ":focus")}';
      }

      #{$sel} {
        @each $prop, $value in $props {
          #{$prop}: $value;
        }
      }
    }
  }

  &[data-border='false'] {
    border: 0;
  }
}
