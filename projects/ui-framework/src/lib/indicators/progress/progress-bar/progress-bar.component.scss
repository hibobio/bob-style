@import '../../../style/common-imports';
@import '../progress.mixin';

$BPBtypeMap: (
  'primary': (
    '*': (
      '&': (
        grid-gap: 12px,
      ),
      '.bpb-value': (
        margin-right: times8(2),
        width: 2.8em,
      ),
    ),
    'large': (
      '.bpb-bar': (
        height: times8(2),
        border-radius: times8(2) / 2,
      ),
      '.bpb-value': (
        font-size: $font-size-display-1,
        font-weight: $font-weight-display-1,
      ),
    ),
    'medium': (
      '.bpb-bar': (
        height: times8(1),
        border-radius: times8(1) / 2,
      ),
      '.bpb-value': (
        font-size: $font-size-display-3,
        font-weight: $font-weight-display-3,
      ),
    ),
    'small': (
      '&': (
        grid-gap: 5px,
      ),
      '.bpb-bar': (
        height: times8(1),
        border-radius: times8(1) / 2,
      ),
      '.bpb-value': (
        font-size: $font-size-display-4,
        font-weight: $font-weight-display-3,
        margin-right: times8(1),
      ),
    ),
  ),
  'secondary': (
    '*': (
      '&': (
        grid-gap: 6px,
      ),
      '.bpb-bar-wrap': (
        display: grid,
        grid-template-columns: 1fr auto,
        grid-gap: times8(2),
      ),
      '.bpb-bar': (
        height: times8(3),
        border-radius: $border-radius,
        grid-row: 1,
      ),
      '.bpb-value': (
        font-size: $font-size-display-4,
        font-weight: $font-weight-display-4,
        text-align: right,
        width: 3.3em,
        grid-row: 1,
      ),
    ),
    'small': (
      '&': (
        grid-gap: 5px,
      ),
      '.bpb-bar-wrap': (
        grid-gap: times8(1),
      ),
      '.bpb-bar': (
        height: times8(1),
        border-radius: times8(1) / 2,
      ),
      '.bpb-value': (
        font-size: $font-size-display-4,
        font-weight: $font-weight-display-3,
      ),
    ),
  ),
);

:host {
  @include progress-host('bpb', grid);
  text-align: left;
  min-width: 0;

  &[data-type='secondary'] {
    --bpb-color: #{$grey-600};
  }
}

h5,
p {
  margin: 0;
  min-width: 0;
}

.bpb-bar {
  @include progress-bar(
    horizontal,
    'bpb',
    var(--bpd-track-color, #{$progress-bar-track-color-def})
  );
}

.bpb-header,
.bpb-bar-wrap,
.bpb-text-scndr {
  display: flex;
  align-items: center;
}

.bpb-text {
  &:empty {
    display: none;
  }
}

.bpb-text-prmr {
  color: $grey-800;
  flex-grow: 1;
}

.bpb-text-scndr {
  color: $grey-600;
  margin-left: times8(2);

  &:before {
    order: 10;
    margin-left: times8(1);
    margin-top: -2px;
  }

  .bpb-value + &,
  .bpb-text-prmr:empty + &,
  &:first-child {
    margin-left: 0;
    flex-direction: row-reverse;

    &:before {
      margin-right: times8(1);
      margin-left: 0;
    }
  }
}

:host[data-size='small']::ng-deep {
  .bpb-text-scndr {
    &:before {
      margin-left: (times8(1) / 2);
    }
    &:first-child:before {
      margin-right: (times8(1) / 2);
      margin-left: 0;
    }
  }
}

.bpb-value {
  color: $display-text-color;
  font-family: var(--display-font-family);
  line-height: 1;
}

:host {
  @each $type, $sizes in $BPBtypeMap {
    &[data-type='#{$type}'] {
      @each $size, $elems in $sizes {
        $sel: '&::ng-deep ';
        @if $size != '*' {
          $sel: '&[data-size="' + $size + '"]::ng-deep';
        }

        #{$sel} {
          @each $elem, $props in $elems {
            #{$elem} {
              @each $prop, $value in $props {
                #{$prop}: $value;

                @if ($prop == 'font-size' or $prop == 'line-height') {
                  --#{$prop}: #{$value};
                }
              }
            }
          }
        }
      }
    }
  }
}

:host[data-clickable='true']::ng-deep {
  .bpb-bar-wrap {
    cursor: pointer;
    padding: 3px;
    margin: -3px;
    border-radius: times8(1) / 2;

    @include progress-bar-hover;
  }
}

:host[data-size='large'][data-clickable='true']::ng-deep,
:host[data-type='secondary'][data-clickable='true']::ng-deep {
  .bpb-bar-wrap {
    padding: 5px;
    margin: -5px;
    border-radius: $border-radius;
  }
}

:host[data-reverse-locations='true']::ng-deep {
  .bpb-bar-wrap {
    grid-row: 1;
  }
  .bpb-header {
    grid-row: 2;
  }
}
:host[data-type='secondary'][data-reverse-locations='true']::ng-deep {
  .bpb-bar-wrap {
    grid-template-columns: auto 1fr;
  }
  .bpb-bar {
    grid-column: 2;
  }
  .bpb-bar-wrap .bpb-value {
    grid-column: 1;
    text-align: left;
  }
}
