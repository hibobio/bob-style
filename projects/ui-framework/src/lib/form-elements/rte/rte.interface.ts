import { GenericObject } from '../../types';

export interface RteMentionsOption {
  avatar: string;
  displayName: string;
  id: string;
}

export interface RtePlaceholder {
  id: string;
  displayName: string;
  sample?: string;
  value?: string;
}

export interface RtePlaceholderList {
  groupName: string;
  key?: string;
  options: RtePlaceholder[];
}

// docs: https://www.froala.com/wysiwyg-editor/docs/options
export interface FroalaOptions {
  aviaryKey?: string;
  aviaryOptions?: GenericObject;
  charCounterCount?: boolean;
  charCounterMax?: number;
  codeBeautifierOptions?: GenericObject;
  codeMirror?: boolean;
  codeMirrorOptions?: GenericObject;
  codeViewKeepActiveButtons?: string[];
  colorsBackground?: string[];
  colorsButtons?: string[];
  colorsHEXInput?: boolean;
  colorsStep?: number;
  colorsText?: string[];
  dragInline?: boolean;
  embedlyKey?: string;
  embedlyEditButtons?: string[];
  embedlyInsertButtons?: string[];
  embedlyScriptPath?: string;
  emoticonsButtons?: string[];
  emoticonsSet?: { code: string; desc: string }[];
  emoticonsUseImage?: boolean;
  emoticonsStep?: number;
  entities?: string;
  fileAllowedTypes?: string[];
  fileInsertButtons?: string[];
  fileMaxSize?: number;
  fileUpload?: boolean;
  fileUploadMethod?: 'POST' | 'PUT' | 'GET';
  fileUploadParam?: string;
  fileUploadParams?: GenericObject;
  fileUploadToS3?: GenericObject;
  fileUploadURL?: string;
  fileUseSelectedText?: boolean;
  fontFamily?: GenericObject;
  fontFamilyDefaultSelection?: string;
  fontFamilySelection?: boolean;
  fontSizeSelection?: boolean;
  fontSize?: string[];
  fontSizeDefaultSelection?: string;
  fontSizeUnit?: string;
  formEditButtons?: string[];
  formMultipleStyles?: boolean;
  formStyles?: GenericObject;
  formUpdateButtons?: string[];
  attribution?: boolean;
  autofocus?: boolean;
  direction?: 'auto' | 'ltr' | 'rtl';
  disableRightClick?: boolean;
  documentReady?: false;
  editInPopup?: boolean;
  editorClass?: boolean;
  enter?: 0 | 1 | 2; // P = 0, DIV = 1, BR = 2
  fullPage?: boolean;
  height?: number;
  heightMax?: number;
  heightMin?: number;
  htmlAllowComments?: boolean;
  htmlAllowedAttrs?: string[];
  htmlAllowedEmptyTags?: string[];
  htmlAllowedStyleProps?: string[];
  htmlAllowedTags?: string[];
  htmlDoNotWrapTags?: string[];
  htmlExecuteScripts?: boolean;
  htmlIgnoreCSSProperties?: string[];
  htmlRemoveTags?: string[];
  htmlSimpleAmpersand?: boolean;
  htmlUntouched?: boolean;
  iconsTemplate?: 'svg' | 'font_awesome_5';
  iframe?: boolean;
  iframeDefaultStyle?: string;
  iframeStyle?: string;
  iframeStyleFiles?: string[];
  indentMargin?: number;
  initOnClick?: boolean;
  keepFormatOnDelete?: boolean;
  multiLine?: boolean;
  pasteAllowedStyleProps?: string[];
  pasteAllowLocalImages?: boolean;
  pasteDeniedAttrs?: string[];
  pasteDeniedTags?: string[];
  pastePlain?: boolean;
  placeholderText?: string;
  pluginsEnabled?: string[];
  requestHeaders?: GenericObject;
  requestWithCredentials?: boolean;
  requestWithCORS?: boolean;
  scrollableContainer?: string;
  shortcutsEnabled?: string[];
  shortcutsHint?: boolean;
  spellcheck?: boolean;
  tabIndex?: number;
  tabSpaces?: number;
  theme?: string;
  toolbarBottom?: boolean;
  toolbarButtons?: string[] | GenericObject;
  toolbarButtonsMD?: string[] | GenericObject;
  toolbarButtonsSM?: string[] | GenericObject;
  toolbarButtonsXS?: string[] | GenericObject;
  toolbarContainer?: string;
  toolbarInline?: boolean;
  toolbarSticky?: boolean;
  toolbarStickyOffset?: number;
  toolbarVisibleWithoutSelection?: boolean;
  tooltips?: boolean;
  typingTimer?: number;
  useClasses?: boolean;
  width?: string;
  zIndex?: number;
  helpSets?: GenericObject[];
  imageAllowedTypes?: string[];
  imageAltButtons?: string[];
  imageCORSProxy?: string;
  imageDefaultAlign?: 'left' | 'center' | 'right';
  imageDefaultDisplay?: string;
  imageDefaultMargin?: number;
  imageDefaultWidth?: number;
  imageEditButtons?: string[];
  imageInsertButtons?: string[];
  imageMaxSize?: number;
  imageMinWidth?: number;
  imageMove?: boolean;
  imageMultipleStyles?: boolean;
  imagePaste?: boolean;
  imagePasteProcess?: boolean;
  imageResize?: boolean;
  imageResizeWithPercent?: boolean;
  imageRoundPercent?: boolean;
  imageOutputSize?: boolean;
  imageSizeButtons?: boolean;
  imageSplitHTML?: boolean;
  imageStyles?: GenericObject;
  imageTUIOptions?: GenericObject;
  imageTextNear?: boolean;
  imageUpload?: boolean;
  imageAddNewLine?: boolean;
  imageUploadMethod?: 'POST' | 'PUT' | 'GET';
  imageUploadParam?: string;
  imageUploadParams?: GenericObject;
  imageUploadRemoteUrls?: boolean;
  imageUploadToS3?: GenericObject;
  imageUploadURL?: string;
  imageManagerDeleteMethod?: 'POST' | 'DELETE' | 'PUT' | 'GET';
  imageManagerDeleteParams?: GenericObject;
  imageManagerDeleteURL?: string;
  imageManagerLoadMethod?: 'POST' | 'PUT' | 'GET';
  imageManagerLoadParams?: GenericObject;
  imageManagerLoadURL?: string;
  imageManagerPageSize?: number;
  imageManagerPreloader?: string;
  imageManagerScrollOffset?: number;
  imageManagerToggleTags?: boolean;
  inlineStyles?: GenericObject;
  inlineClasses?: GenericObject;
  language?: string;
  lineBreakerHorizontalOffset?: number;
  lineBreakerOffset?: number;
  lineBreakerTags?: string[];
  linkAlwaysBlank?: boolean;
  linkAlwaysNoFollow?: boolean;
  linkAttributes?: GenericObject;
  linkAutoPrefix?: string;
  linkConvertEmailAddress?: boolean;
  linkEditButtons?: string[];
  linkInsertButtons?: string[];
  linkList?: string[];
  linkMultipleStyles?: boolean;
  linkNoOpener?: boolean;
  linkNoReferrer?: boolean;
  linkStyles?: GenericObject;
  linkText?: boolean;
  paragraphDefaultSelection?: string;
  paragraphFormat?: GenericObject;
  paragraphFormatSelection?: boolean;
  paragraphMultipleStyles?: boolean;
  paragraphStyles?: GenericObject;
  lineHeights?: GenericObject;
  listAdvancedTypes?: boolean;
  quickInsertButtons?: string[];
  quickInsertEnabled?: boolean;
  quickInsertTags?: string[];
  faButtons?: string[];
  fontAwesomeSets?: GenericObject;
  fontAwesomeTemplate?: string;
  specialCharButtons?: string[];
  specialCharactersSets?: GenericObject;
  saveInterval?: number;
  saveMethod?: 'POST' | 'PUT' | 'GET';
  saveParam?: string;
  saveParams?: GenericObject;
  saveURL?: string;
  tableCellMultipleStyles?: boolean;
  tableCellStyles?: GenericObject;
  tableColors?: string[];
  tableColorsButtons?: string[];
  tableColorsStep?: number;
  tableDefaultWidth?: string;
  tableEditButtons?: string[];
  tableInsertButtons?: string[];
  tableInsertHelper?: boolean;
  tableInsertHelperOffset?: number;
  tableInsertMaxSize?: number;
  tableMultipleStyles?: boolean;
  tableResizer?: boolean;
  tableResizerOffset?: number;
  tableResizingLimit?: number;
  tableStyles?: GenericObject;
  videoAllowedProviders?: string[];
  videoAllowedTypes?: string[];
  videoDefaultAlign?: 'left' | 'center' | 'right';
  videoDefaultDisplay?: string;
  videoDefaultWidth?: number;
  videoEditButtons?: string[];
  videoInsertButtons?: string[];
  videoMaxSize?: number;
  videoMove?: boolean;
  videoResize?: boolean;
  videoResponsive?: boolean;
  videoSizeButtons?: string[];
  videoSplitHTML?: boolean;
  videoTextNear?: boolean;
  videoUpload?: boolean;
  videoUploadMethod?: 'POST' | 'PUT' | 'GET';
  videoUploadParam?: string;
  videoUploadParams?: GenericObject;
  videoUploadToS3?: GenericObject;
  videoUploadURL?: string;
  wordAllowedStyleProps?: string[];
  wordDeniedAttrs?: string[];
  wordDeniedTags?: string[];
  wordPasteModal?: boolean;
  wordPasteKeepFormatting?: boolean;
  events?: FroalaEvents;
  angularIgnoreAttrs?: string[];
  immediateAngularModelUpdate?: boolean;
  [key: string]: any;
}

export interface FroalaEvents {
  blur?: Function;
  'buttons.refresh'?: Function;
  'charCounter.exceeded'?: Function;
  'charCounter.update'?: Function;
  click?: Function;
  'codeView.update'?: Function;
  'commands.after'?: Function;
  'commands.before'?: Function;
  'commands.mousedown'?: Function;
  'commands.redo'?: Function;
  'commands.undo'?: Function;
  contentChanged?: Function;
  destroy?: Function;
  drop?: Function;
  'edit.off'?: Function;
  'edit.on'?: Function;
  'element.dropped'?: Function;
  'embedly.beforeRemove'?: Function;
  'file.beforeUpload'?: Function;
  'file.error'?: Function;
  'file.inserted'?: Function;
  'file.unlink'?: Function;
  'file.uploaded'?: Function;
  'file.uploadedToS3'?: Function;
  focus?: Function;
  'html.afterGet'?: Function;
  'html.beforeGet'?: Function;
  'html.get'?: Function;
  'html.processGet'?: Function;
  'html.set'?: Function;
  'image.beforePasteUpload'?: Function;
  'image.beforeRemove'?: Function;
  'image.beforeUpload'?: Function;
  'image.error'?: Function;
  'image.hideResizer'?: Function;
  'image.inserted'?: Function;
  'image.loaded'?: Function;
  'image.removed'?: Function;
  'image.replaced'?: Function;
  'image.resize'?: Function;
  'image.resizeEnd'?: Function;
  'image.uploaded'?: Function;
  'image.uploadedToS3'?: Function;
  'imageManager.beforeDeleteImage'?: Function;
  'imageManager.error'?: Function;
  'imageManager.imageDeleted'?: Function;
  'imageManager.imageLoaded'?: Function;
  'imageManager.imagesLoaded'?: Function;
  initializationDelayed?: Function;
  initialized?: Function;
  input?: Function;
  keydown?: Function;
  keypress?: Function;
  keyup?: Function;
  'link.bad'?: Function;
  'link.beforeInsert'?: Function;
  'link.beforeRemove'?: Function;
  mousedown?: Function;
  mouseup?: Function;
  'paste.after'?: Function;
  'paste.afterCleanup'?: Function;
  'paste.before'?: Function;
  'paste.beforeCleanup'?: Function;
  'paste.wordPaste'?: Function;
  'popups.hide'?: Function;
  'popups.show'?: Function;
  'position.refresh'?: Function;
  'quickInsert.commands.after'?: Function;
  'quickInsert.commands.before'?: Function;
  'save.after'?: Function;
  'save.before'?: Function;
  'save.error'?: Function;
  shortcut?: Function;
  'snapshot.after'?: Function;
  'snapshot.before'?: Function;
  'table.inserted'?: Function;
  'table.resized'?: Function;
  'toolbar.esc'?: Function;
  'toolbar.focusEditor'?: Function;
  'toolbar.hide'?: Function;
  'toolbar.show'?: Function;
  touchend?: Function;
  touchstart?: Function;
  'url.linked'?: Function;
  'video.beforeRemove'?: Function;
  'video.beforeUpload'?: Function;
  'video.codeError'?: Function;
  'video.hideResizer'?: Function;
  'video.inserted'?: Function;
  'video.linkError'?: Function;
  'video.loaded'?: Function;
  'video.removed'?: Function;
  'video.replaced'?: Function;
  'video.uploaded'?: Function;
  'video.uploadedToS3'?: Function;
  'window.cut'?: Function;
  'window.copy'?: Function;
  [key: string]: Function;
}
