@import '../../style/typography';
@import '../../style/colors';
@import '../../style/mixins';

$button-width: 25px;
$button-icon-size: 14px;
// next good value is 17px (without blurring)

$icon-color: $grey-600;
$icon-color-hover: $grey-700;
$icon-color-disabled: $grey-500;

$placeholder-color: $icon-color;

$border-color: $grey-500;
$border-color-disabled: $icon-color-disabled;
$color-error: var(--negative-500);
$border-color-error: $color-error;

:host {
  text-align: left;
  display: block;
  min-width: 250px;
}

.quill-editor {
  display: flex;
  flex-direction: column;
}

.quill-toolbar {
  height: 41px;

  &:not(.ql-toolbar) {
    opacity: 0;
  }
}

:host ::ng-deep {
  .ql-snow {
    &.ql-container,
    &.ql-toolbar,
    .ql-picker {
      @include BodyFont;
    }

    &.ql-container,
    &.ql-toolbar {
      border: 0;
    }

    &.ql-container {
      order: 1;
      flex-grow: 1;
      display: flex;
      flex-direction: column;
    }

    .ql-editor {
      flex-grow: 1;
      min-height: inherit;
      max-height: inherit;
      overflow: auto;
      border-bottom: none;
    }

    &.ql-toolbar {
      order: 2;
      border-top: 1px solid $border-color;

      .toolbar-suffix {
        margin-left: auto;
      }
    }

    &.ql-toolbar,
    &.ql-toolbar .ql-formats {
      display: flex;
      align-items: center;

      &:after {
        display: none;
      }
    }

    // picker dropdown (horizontal)

    .ql-icon-picker {
      width: auto;
      display: flex;

      .ql-picker-options {
        min-width: 0;
        margin: 0;
        position: static;
        display: flex;
        box-shadow: none;
        overflow: hidden;
        border-left: 0;
        background-color: transparent;
        max-width: ($button-width * 4);
        padding: 0 5px;
        transition: max-width 0.3s, padding 0.2s;

        &[aria-hidden='true'] {
          max-width: 0px;
          padding: 0;
          border-right: 0;
        }
      }

      .ql-picker-item {
        max-height: 100%;
        max-width: ($button-width - 3px);
      }

      .ql-picker-label {
        display: flex;
        align-items: center;
        justify-content: space-between;
      }
    }

    // buttons

    .ql-picker .ql-picker-label,
    .ql-icon-picker .ql-picker-item,
    &.ql-toolbar button {
      @include size($button-width, ($button-width - 1px));
      @include flex-align;
      padding: 0;

      &,
      svg {
        float: none;
      }

      svg {
        @include size($button-icon-size);
      }

      .mat-icon {
        @include size(auto);
        display: block;
      }
    }

    // button mods

    .ql-list {
      margin: 0 1px;
    }
    .ql-italic {
      margin: 0 -2px;
    }
    &.ql-toolbar .ql-direction svg {
      @include size($button-icon-size + 1px);
    }
    .rte-size {
      margin-right: -2px;
    }
    &.ql-toolbar .rte-size svg {
      @include size($button-icon-size + 1px, auto);
    }

    // svg fill colors

    .ql-fill,
    .ql-stroke.ql-fill {
      fill: $icon-color;
    }
    .ql-stroke {
      stroke: $icon-color;
    }

    &.ql-toolbar button {
      &:hover,
      &:focus,
      &.ql-active {
        outline: 0;

        .ql-fill,
        .ql-stroke.ql-fill {
          fill: $icon-color-hover;
        }
        .ql-stroke {
          stroke: $icon-color-hover;
        }

        .mat-icon {
          path,
          circle {
            fill: $grey-700 !important;
          }
        }
      }
    }

    &.ql-toolbar .ql-picker-item,
    &.ql-toolbar .ql-picker-label {
      color: $icon-color;

      .ql-fill,
      .ql-stroke.ql-fill {
        fill: $icon-color;
      }
      .ql-stroke {
        stroke: $icon-color;
      }
      &:hover,
      &:focus,
      &.ql-active {
        outline: 0;
        color: $icon-color-hover;

        .ql-fill,
        .ql-stroke.ql-fill {
          fill: $icon-color-hover;
        }
        .ql-stroke {
          stroke: $icon-color-hover;
        }
      }
    }
  }

  .mat-hint {
    display: block;
    margin-top: 5px;
    padding: 0 16px;
    @include BodyFont($font-size-caption);
  }

  .ql-editor.ql-blank:before {
    color: $icon-color;
    font-style: normal;
  }
}

:host {
  &.error:not(.disabled) ::ng-deep {
    .mat-hint {
      color: $color-error;
    }
  }

  &.disabled ::ng-deep {
    user-select: none;

    .ql-snow {
      &.ql-container,
      &.ql-toolbar {
        pointer-events: none;
      }
      .ql-fill,
      .ql-stroke.ql-fill {
        fill: $icon-color-disabled;
      }
      .ql-stroke {
        stroke: $icon-color-disabled;
      }
      .mat-icon {
        path,
        circle {
          fill: $icon-color-disabled !important;
        }
      }
      &.ql-toolbar .ql-picker-item,
      &.ql-toolbar .ql-picker-label,
      &.ql-toolbar .ql-active {
        color: $icon-color-disabled;

        .ql-fill,
        .ql-stroke.ql-fill {
          fill: $icon-color-disabled;
        }
        .ql-stroke {
          stroke: $icon-color-disabled;
        }
      }
    }

    .ql-editor,
    .ql-toolbar button,
    .toolbar-suffix,
    .ql-editor.ql-blank:before,
    .mat-hint,
    [style],
    a {
      color: $icon-color-disabled !important;
    }
  }
}

// Primary

:host.rte-primary {
  .quill-editor {
    box-shadow: 2px 2px 3px 0 black(0.04);
    background-color: white;
    border: 1px solid $border-color;
    border-radius: 4px;
  }
  & ::ng-deep {
    .ql-snow {
      &.ql-toolbar {
        padding-left: 11px;
        padding-right: 16px;
      }
    }
  }
  &.error:not(.disabled) ::ng-deep {
    .quill-editor,
    .ql-toolbar {
      border-color: $border-color-error;
    }
  }
  &.disabled ::ng-deep {
    .quill-editor {
      background-color: $grey-100;
      box-shadow: none;
      border-color: $border-color-disabled;
    }
  }
}

// Secondary & Tertiary common

:host.rte-secondary,
:host.rte-tertiary {
  & ::ng-deep {
    .ql-snow {
      &.ql-toolbar {
        padding-left: 0;
        padding-right: 0;
      }
    }
  }
  .mat-hint {
    padding-left: 0;
    padding-right: 0;
  }
  &.error:not(.disabled) ::ng-deep {
    .ql-toolbar {
      border-bottom: 1px solid $border-color-error;
    }
  }
}

// Secondary

:host.rte-secondary {
  & ::ng-deep {
    .ql-editor {
      padding-left: 0;
      padding-right: 0;
      padding-top: 0;
    }
    .ql-editor.ql-blank:before {
      left: 0;
      right: 0;
    }
    .ql-snow {
      &.ql-toolbar {
        border-bottom: 1px solid $border-color;
      }
    }
    .ql-container:last-child {
      border-bottom: 1px solid $border-color;
    }
  }
}

// Tertiary

:host.rte-tertiary {
  & ::ng-deep {
    .ql-editor {
      background-color: $grey-100;
      padding: 20px;
    }
    .ql-snow {
      &.ql-toolbar {
        border: 0;
      }
    }
  }
}

// Panels

:host::ng-deep {
  .panel-trigger {
    display: block;
  }
}

::ng-deep {
  .b-panel.rte-size-controls,
  .b-panel.rte-link-editor {
    margin-top: -3px;

    .panel-position.panel-after {
      &:before {
        left: 8px;
      }
      &:after {
        left: 9px;
      }
    }

    .panel-wrapper {
      box-shadow: 0 0px 9px 0 $boxShadowColor;
      display: flex;
      flex-direction: column;
    }
  }
}

// Size panel

::ng-deep {
  .b-panel.rte-size-controls {
    .rte-button {
      text-align: left;
      padding: 0;
      border: 0;
      background: transparent;
      color: $icon-color;
      cursor: pointer;

      &:hover,
      &:focus,
      &.ql-active {
        outline: 0;
        color: $icon-color-hover;
      }

      &.rte-size-small {
        @include BodyFont($font-size-caption);
      }
      &.rte-size-normal {
        @include BodyFont($font-size-body);
      }
      &.rte-size-large {
        @include BodyFont(18px, $lineHeight: 1);
      }
      &.rte-size-huge {
        @include BodyFont(32px, $lineHeight: 1);
      }
    }
  }
}

// Align panel

.quill-toolbar[hide-align='true'] ::ng-deep {
  .ql-align {
    display: none;
  }
}
::ng-deep {
  .single-list-select {
    min-width: 400px;
  }
}

// Editor text area CSS mods

:host:not(.disabled) ::ng-deep {
  span[style],
  strong[style],
  u[style],
  em[style] {
    color: inherit !important;
  }

  [style] a,
  a {
    color: #e52c51;
    text-decoration: underline;
  }
}

@import './rte-placeholder/rte-placeholders.scss';
