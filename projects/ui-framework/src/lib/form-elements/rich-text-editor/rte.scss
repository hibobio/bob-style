@import '../../style/typography';
@import '../../style/colors';
@import '../../style/mixins';
@import '../form-element.mixin';

@import './styles/quill';

$button-width: 25px;
$button-icon-size: 14px;
// next good value is 17px (without blurring)

$icon-color: $grey-600;
$icon-color-hover: $grey-700;
$placeholder-color: $icon-color;
$border-color: $grey-500;

:host {
  text-align: left;
  display: block;
  min-width: 250px;
  width: 100%;

  @include form-element-margins;
}

.bfe-label {
  @include bFormElement-label;
}
:host.required {
  .bfe-label {
    @include input-requred;
  }
}

.quill-editor {
  display: flex;
  flex-direction: column;
}

.quill-toolbar {
  height: 41px;

  &:not(.ql-toolbar) {
    opacity: 0;
  }

  &[hidden],
  [hidden] {
    display: none !important;
    pointer-events: none;
  }
}

:host ::ng-deep {
  .ql-container,
  .ql-toolbar,
  .ql-picker {
    @include BodyFont;
  }

  .ql-container,
  .ql-toolbar {
    border: 0;
  }

  .ql-container {
    order: 1;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }

  .ql-editor {
    flex-grow: 1;
    min-height: inherit;
    max-height: inherit;
    overflow: auto;
    border-bottom: none;
    padding-bottom: 15px;
  }

  .ql-toolbar {
    order: 2;
    border-top: 1px solid $border-color;
  }

  .toolbar-suffix {
    margin-left: auto;
  }

  .ql-toolbar,
  .ql-toolbar .ql-formats {
    display: flex;
    align-items: center;

    &:after {
      display: none;
    }
  }

  // picker dropdown (horizontal)

  .ql-align.ql-icon-picker {
    width: auto;
    display: flex;

    .ql-picker-options {
      min-width: 0;
      margin: 0;
      position: static;
      display: flex;
      box-shadow: none;
      overflow: hidden;
      border-left: 0;
      background-color: transparent;
      max-width: ($button-width * 4);
      padding: 0 5px;
      transition: max-width 0.3s, padding 0.2s;

      &[aria-hidden='true'] {
        max-width: 0px;
        padding: 0;
        border-right: 0;
      }
    }

    .ql-picker-item {
      max-height: 100%;
      max-width: ($button-width - 3px);
    }
  }

  // buttons

  .ql-picker .ql-picker-label,
  .ql-icon-picker .ql-picker-item,
  .ql-toolbar button {
    @include size($button-width, ($button-width - 1px));
    @include flex-align;
    padding: 0;

    &,
    svg {
      float: none;
    }

    svg {
      @include size($button-icon-size);
    }

    .mat-icon {
      @include size(auto);
      display: block;
    }
  }

  // button mods

  .ql-list {
    margin: 0 1px;
  }
  .ql-italic {
    margin: 0 -2px;
  }
  .ql-toolbar .ql-direction svg {
    @include size($button-icon-size + 1px);
  }
  .rte-size {
    margin-right: -2px;
  }
  .ql-toolbar .rte-size svg {
    @include size($button-icon-size + 1px, auto);
  }

  // svg fill colors

  .ql-fill,
  .ql-stroke.ql-fill {
    fill: $icon-color;
  }
  .ql-stroke {
    stroke: $icon-color;
  }

  .ql-toolbar button {
    &:hover,
    &:focus,
    &.ql-active {
      outline: 0;

      .ql-fill,
      .ql-stroke.ql-fill {
        fill: $icon-color-hover;
      }
      .ql-stroke {
        stroke: $icon-color-hover;
      }

      .mat-icon {
        path,
        circle {
          fill: $grey-700 !important;
        }
      }
    }
  }

  .ql-picker-item,
  .ql-picker-label {
    color: $icon-color;

    .ql-fill,
    .ql-stroke.ql-fill {
      fill: $icon-color;
    }
    .ql-stroke {
      stroke: $icon-color;
    }
    &:hover,
    &:focus,
    &.ql-active {
      outline: 0;
      color: $icon-color-hover;

      .ql-fill,
      .ql-stroke.ql-fill {
        fill: $icon-color-hover;
      }
      .ql-stroke {
        stroke: $icon-color-hover;
      }
    }
  }

  .ql-editor.ql-blank:before {
    color: $icon-color;
    font-style: normal;
  }
}

// Length counter

.ql-container {
  position: relative;

  &:after {
    content: attr(data-length);
    display: block;
    @include position(null null 3px null);
    font-size: 9px;
    line-height: 1;
    border-radius: 10px;
    padding: 1px 7px;
    color: $grey-600;
    background-color: white(0.5);
  }
}

.length-indicator {
  font-size: $font-size-caption;
  color: $grey-600;
  margin-left: auto;
}

:host {
  &.length-invalid {
    .ql-container:after,
    .length-indicator {
      color: $color-error;
    }
  }
  &.length-warning {
    .ql-container:after,
    .length-indicator {
      color: $color-warn;
    }
  }
}

// Disabled

:host {
  &.disabled {
    @include disabled-state;
  }
}

// Primary

:host.rte-primary {
  .quill-editor {
    box-shadow: 2px 2px 3px 0 black(0.04);
    background-color: white;
    border: 1px solid $border-color;
    border-radius: 4px;
  }
  & ::ng-deep {
    .ql-toolbar {
      padding-left: 11px;
      padding-right: 16px;
    }
    .ql-container:after {
      right: 7px;
    }
  }
  &.error ::ng-deep {
    .quill-editor,
    .ql-toolbar {
      border-color: $color-error;
    }
  }
  &.warn ::ng-deep {
    .quill-editor,
    .ql-toolbar {
      border-color: $color-warn;
    }
  }
  &.disabled ::ng-deep {
    .quill-editor {
      box-shadow: none;
    }
  }
}

// Secondary & Tertiary common

:host.rte-secondary,
:host.rte-tertiary {
  & ::ng-deep {
    .ql-toolbar {
      padding-left: 0;
      padding-right: 0;
    }
  }
  &.error ::ng-deep {
    .ql-toolbar {
      border-bottom: 1px solid $color-error;
    }
  }
  &.warn ::ng-deep {
    .ql-toolbar {
      border-bottom: 1px solid $color-warn;
    }
  }
}

// Secondary

:host.rte-secondary {
  & ::ng-deep {
    .ql-editor {
      padding-left: 0;
      padding-right: 0;
      padding-top: 0;
    }
    .ql-editor.ql-blank:before {
      left: 0;
      right: 0;
    }
    .ql-toolbar {
      border-bottom: 1px solid $border-color;
    }
    .ql-container:last-child {
      border-bottom: 1px solid $border-color;
    }
    .ql-container:after {
      right: 0;
    }
  }
}

// Tertiary

:host.rte-tertiary {
  & ::ng-deep {
    .ql-editor {
      background-color: $grey-100;
      padding: 20px;
    }
    .ql-toolbar {
      border: 0;
    }
    .ql-container:after {
      right: 12px;
      bottom: 5px;
    }
  }
}

// Panels

:host::ng-deep {
  .panel-trigger {
    display: block;
  }
}

::ng-deep {
  .b-panel.rte-size-controls,
  .b-panel.rte-link-editor-panel,
  .b-panel.placeholder-rte-panel {
    margin-top: -3px;

    .panel-position.panel-after {
      &:before {
        left: 8px;
      }
      &:after {
        left: 9px;
      }
    }

    .panel-wrapper {
      box-shadow: 0 0px 9px 0 $boxShadowColor;
      display: flex;
      flex-direction: column;
      padding: 10px;
      margin-top: -2px;
    }
  }
}

// Size panel

::ng-deep {
  .b-panel.rte-size-controls {
    .rte-button {
      text-align: left;
      padding: 0;
      border: 0;
      background: transparent;
      color: $icon-color;
      cursor: pointer;

      &:hover,
      &:focus,
      &.ql-active {
        outline: 0;
        color: $icon-color-hover;
      }

      &.rte-size-small {
        @include BodyFont($font-size-caption);
      }
      &.rte-size-normal {
        @include BodyFont($font-size-body);
      }
      &.rte-size-large {
        @include BodyFont(18px, $lineHeight: 1);
      }
      &.rte-size-huge {
        @include BodyFont(32px, $lineHeight: 1);
      }
    }
  }
}

// Editor text area CSS mods

:host ::ng-deep {
  span[style],
  strong[style],
  u[style],
  em[style] {
    color: inherit !important;
  }

  [style] a,
  a {
    color: #e52c51;
    text-decoration: underline;
  }
}

@import './rte-placeholder/rte-placeholders.scss';
