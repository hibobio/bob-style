@import '../../style/common-imports';
@import '../card/card.mixin';

@function power($number, $power) {
  $exponent: 1;

  @if $power > 0 {
    @for $i from 1 through $power {
      $exponent: $exponent * $number;
    }
  } @else if $power < 0 {
    @for $i from 1 through $power {
      $exponent: $exponent / $number;
    }
  }

  @return $exponent;
}

:host {
  display: block;
  --card-grid-gap: times8(2);
  --card-width: $card-width-regular;
}

.cards-list {
  display: grid;
  grid-gap: var(--card-grid-gap);
  grid-template-columns: repeat(auto-fill, minmax(var(--card-width), 1fr));
  position: relative;
}

[data-align-center='false'][data-swiper-mode='false']::ng-deep {
  .single-card {
    max-width: none;
  }
}

// Flex layout

[data-align-center='true'],
[data-swiper-mode='true'] {
  grid-template-columns: none;
  grid-gap: 0;
  display: flex;
  flex-direction: row;

  &::ng-deep .single-card:only-child {
    max-width: none;
  }

  &[data-cards-in-row='1']::ng-deep .single-card {
    width: 100%;
  }
}

// Align center

[data-align-center='true'] {
  justify-content: center;

  &[data-swiper-mode='false'] {
    flex-wrap: wrap;
    margin: calc(var(--card-grid-gap) / -2);
    width: calc(100% + var(--card-grid-gap));

    &::ng-deep .single-card {
      margin: calc(var(--card-grid-gap) / 2);
    }
  }

  @for $i from 2 through 10 {
    &[data-cards-in-row='#{$i}']::ng-deep {
      .single-card {
        width: calc((100% - var(--card-grid-gap) * #{$i}) / #{$i});
      }
    }
  }
}

// Swiper

$hover-shadow-offset: 12px;

[data-swiper-mode='true'] {
  flex-wrap: nowrap;
  padding-bottom: $hover-shadow-offset;
  margin-bottom: (-1 * $hover-shadow-offset);

  &[data-align-center='false'],
  &[data-few-cards='false'] {
    justify-content: flex-start;
  }

  @include scroll-snap-x(
    $item: '&::ng-deep .single-card',
    $snap-align: start,
    $breakout: var(--padding-x-mob),
    $item-gap: var(--card-grid-gap),
    $ghosts: true
  ) {
    &:before {
      bottom: $hover-shadow-offset;
    }
  }

  @for $i from 2 through 5 {
    &[data-cards-in-row='#{$i}']::ng-deep {
      .single-card {
        width: calc(
          (100vw -
          var(--padding-x-mob) *
          2 -
          var(--card-grid-gap) *
          #{$i -
          1}) /
          #{$i}
        );
      }
    }
  }

  &[data-cards-in-row='1'] {
    padding-right: var(--padding-x-mob);

    &::ng-deep .single-card {
      scroll-snap-align: center;
    }

    @include mobile($min: 380px) {
      &[data-type='large'],
      &[data-type='regular'] {
        padding-right: calc((100vw - #{$card-max-width-large}) / 2);
        padding-left: calc((100vw - #{$card-max-width-large}) / 2);

        &:before,
        &:after {
          width: calc(
            (100vw - #{$card-max-width-large}) / 2 - var(--card-grid-gap)
          );
        }

        @include scroll-snap-x-ghosts($opacity: 0.75);

        &::ng-deep .single-card {
          max-width: $card-max-width-large;
        }
      }
    }
  }
}

$degreeSpan: 90;
$cardNum: 6;

.cards-list {
  display: flex;
  border: 4px solid red;
  padding: 20px;
  //align-items: flex-start;
  &:hover {
    border: 4px solid green;
    ::ng-deep .single-card {
      transform: none !important;
    }
  }
}

:host ::ng-deep .single-card {
  width: 230px;
  flex-shrink: 0;
  transform-origin: center bottom;
  transition: transform 0.3s;
  margin-right: 24px;
  box-shadow: 0 5px 5px rgba(0, 0, 0, 0.1);
  pointer-events: none;
}

@for $i from 1 through $cardNum {
  :host ::ng-deep .single-card:nth-child(#{$i}) {
    transform: translateX(calc(145px - #{($i - 1) * 190}px)) translateY(#{power(($i - $cardNum / 2), 2) * 8 - 20}px) rotate(#{($i - $cardNum / 2) * $degreeSpan / $cardNum}deg);
  }
}
