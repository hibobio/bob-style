@import '../../style/common-imports';
@import '../../avatar/avatar/avatar.mixin';

@keyframes bchp-blink {
  0%,
  100% {
    box-shadow: 0 0 0 0 transparent;
  }
  50% {
    box-shadow: 0 0 0 2px $grey-300;
  }
}

$chipTypeMap: (
  tag: (
    background-color: $grey-300,
    color: $grey-700,
    border-color: $grey-300,
    font-weight: $font-weight-body,
  ),
  info: (
    background-color: var(--inform-500),
    color: white,
    border-color: var(--inform-500),
  ),
  warning: (
    background-color: $color-warn,
    color: white,
    border-color: $color-warn,
  ),
  error: (
    background-color: $color-error,
    color: white,
    border-color: $color-error,
  ),
  success: (
    background-color: var(--positive-500),
    color: white,
    border-color: var(--positive-500),
  ),
  avatar: (
    background-color: white,
    color: $grey-800,
    border-color: $grey-300,
    height: map-get($avatarSizes, mini) + 2px,
    border-radius: (
      (map-get($avatarSizes, mini) + 2px) / 2,
    ),
    padding: 0 12px 0 10px,
  ),
  icon: (
    background-color: white,
    color: $grey-800,
    border-color: $grey-300,
    height: 32px,
    border-radius: 16px,
    padding: 0 16px,
  ),
  tab: (
    color: $grey-800,
    border: 0,
    height: 32px,
    border-radius: 16px,
    padding: 0 16px,
  ),
);

$chipStateMap: (
  selected: (
    background-color: var(--primary-600),
    color: white,
    border-color: var(--primary-600),
  ),
  disabled: (
    background-color: $grey-200,
    color: $grey-500,
    border-color: $grey-200,
    pointer-events: none,
  ),
);

:host {
  box-sizing: border-box;
  display: inline-flex;
  justify-content: space-between;
  align-items: center;
  border-radius: 13px;
  white-space: nowrap;
  border: 1px solid transparent;

  font-size: $font-size-body;
  font-weight: 500;

  height: 20px;
  padding: 0 10px;

  user-select: none;
  cursor: default;
  outline: 0;

  &.blink {
    @include animate(bchp-blink, 0.3s);
  }

  &[data-clickable='true'] {
    cursor: pointer;
  }

  &[tabindex='0']:focus,
  &.focused {
    position: relative;
    &:after {
      @include pseudo;
      @include size(100%);
      @include position;
      border-radius: inherit;
      background-color: black(0.05);
      z-index: 0;
    }
  }

  @each $type, $typeProps in $chipTypeMap {
    &[data-type='#{$type}'] {
      @each $prop, $value in $typeProps {
        #{$prop}: $value;
      }
    }
  }

  @each $state, $stateProps in $chipStateMap {
    &[data-#{$state}='true'] {
      @each $prop, $value in $stateProps {
        #{$prop}: $value;
      }
    }
  }
}

.chip-text {
  pointer-events: none;
}

.remove-button {
  margin-left: 5px;
  margin-right: -9px;
  display: block;
  cursor: pointer;
}

// additional styles for Avatar, Icon & Tab chips

:host[data-type='tab']::ng-deep,
:host[data-type='icon']::ng-deep,
:host[data-type='avatar']::ng-deep {
  .remove-button {
    margin-right: -3px;
    margin-left: 6px;
  }
}

:host[data-type='avatar']::ng-deep {
  b-avatar {
    margin-right: 5px;
    margin-left: -10px;

    .avatar.avatar {
      box-shadow: none;
    }
  }
}

:host[data-type='avatar'][data-disabled='true']::ng-deep {
  b-avatar {
    .avatar {
      filter: grayscale(1);
      opacity: 0.3;
    }
  }
}

:host[data-type='tab']:before,
:host[data-type='icon']:before {
  margin-right: 8px;
  margin-left: -4px;
}

:host[data-type='icon'][data-selected='true']:not([data-disabled='true']) {
  color: $grey-800;
  background-color: $color-option-selected;
  border-color: $color-option-selected;
}

:host[data-type='tab'][data-disabled='true']:before,
:host[data-type='icon'][data-disabled='true']:before {
  opacity: 0.3;
}

:host[data-type='tab'][data-selected='true']:not([data-disabled='true']) {
  color: white;
  background-color: var(--negative-600);

  &:before {
    color: white;
  }
}

:host[data-type='tab'][data-selected='false']:not([data-disabled='true'])[data-clickable='true'] {
  &:hover,
  &:focus {
    background-color: $grey-100;
  }
}

:host[data-type='tab']:focus:after {
  display: none;
}
