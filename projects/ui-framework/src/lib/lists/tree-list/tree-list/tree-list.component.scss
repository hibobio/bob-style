@import '../../../style/common-imports';
@import '../../../style/icons.mixin';

$btl-item-height: $wrap-height;
$btl-item-indent: base8(30);
$btl-item-padding: $input-padding;
$btl-icon-margin: 10px;
$btl-max-depth: 10;

//-------DEV---------
.dev {
  display: none;
}
:host[data-debug='true'] {
  overflow: visible !important;

  .dev {
    display: block;
    position: absolute;
    top: 105%;
    left: 0;
    right: 0;

    p {
      margin: 0 0 5px 0;
    }
  }
}
//----------------

:host {
  display: block;
  max-width: 100%;
  min-width: 0;
  position: relative;
  text-align: left;
  user-select: none;
  overflow: hidden;
  @include b-body($color: $grey-700, $addCssVars: false, $lineHeight: 1.2);
  background-color: white;
  --list-max-items: 8;
  border-radius: $border-radius;

  &[data-embedded='false'] {
    border: 1px solid $border-color;
    box-shadow: 0 2px 3px 0 $boxShadowColor;
  }

  &[hidden] {
    border: 0 !important;
    box-shadow: none !important;

    .btl-footer,
    .dev {
      display: none;
    }
  }
}

.btl-list {
  list-style: none;
  padding: 0;
  margin: 0;
  position: relative;
  max-height: calc(var(--list-max-items) * #{$btl-item-height} - 1px);
  overflow-y: auto;
  will-change: scroll-position, transform;
}

// Item

.btl-item {
  height: $btl-item-height;
  display: flex;
  align-items: center;
  padding: 0 $btl-item-padding;
  position: relative;
  background-color: white;
  will-change: box-shadow, z-index;
}

:host ::ng-deep {
  .btl-item-name {
    min-width: 0;

    strong {
      text-decoration: underline;
    }
  }
}

.btl-item-name,
.btl-selected-count {
  pointer-events: none;
}

@for $i from 2 through $btl-max-depth {
  [data-level='#{$i}'] {
    padding-left: ($btl-item-padding + $btl-item-indent * ($i - 1));
  }
}

.btl-item-option {
  &.next-is-group {
    box-shadow: inset 0 -1px 0 0 $border-color-light;
  }

  @for $i from 1 through $btl-max-depth {
    &[data-level='#{$i}'] + .btl-item-option:not([data-level='#{$i}']) {
      box-shadow: inset 0 1px 0 0 $border-color-light;

      &.next-is-group {
        box-shadow: inset 0 1px 0 0 $border-color-light,
          inset 0 -1px 0 0 $border-color-light;
      }
    }
  }
}

// Group

.btl-item-group {
  box-shadow: 0 -1px 0 0 $border-color-light,
    inset 0 -1px 0 0 $border-color-light;

  &:first-child {
    box-shadow: inset 0 -1px 0 0 $border-color-light;
  }

  &:last-child {
    box-shadow: 0 -1px 0 0 $border-color-light;
  }
}

:host ::ng-deep {
  .btl-item-group.expanded {
    position: sticky;
    top: 0;

    @for $i from 1 through $btl-max-depth {
      &[data-level='#{$i}'] {
        top: $btl-item-height * ($i - 1);
        z-index: $btl-max-depth * 10 - $i * 10 - 1;

        & ~ .btl-item-option[data-level='#{$i}'],
        & ~ .btl-item-group.collapsed[data-level='#{$i}'] {
          z-index: $btl-max-depth * 10 - $i * 10;
        }

        &
          ~ .btl-item-group.expanded[data-level='#{$i+1}']
          ~ .btl-item-option[data-level='#{$i+1}'],
        &
          ~ .btl-item-group.expanded[data-level='#{$i+1}']
          ~ .btl-item-group.collapsed[data-level='#{$i+1}'] {
          z-index: $btl-max-depth * 10 - $i * 10 - 2;
        }

        & ~ .btl-item-group.expanded[data-level='#{$i+1}'] {
          z-index: $btl-max-depth * 10 - $i * 10 - 3;
        }
      }
    }
  }

  .btl-item-group {
    .btl-item-name {
      font-weight: $font-weight-bold-body;
    }
  }
}

// Controls

.btl-item-chevron {
  display: block;
  margin-right: $btl-icon-margin - 2px;

  &:before {
    font-size: map-get($icon-sizes, 'medium');
    color: map-get-deep($icon-colors, 'dark', color);
    @include size($b-checkbox-size);
    line-height: $b-checkbox-size;
    display: flex;
    justify-content: center;
  }
}

:host ::ng-deep {
  .collapsed .btl-item-chevron {
    @include b-icon(chevron-right, $size: null, $color: false, $hover: false) {
      display: flex;
    }
  }

  .expanded .btl-item-chevron {
    @include b-icon(chevron-down, $size: null, $color: false, $hover: false) {
      display: flex;
    }
  }

  .all-options-hidden .btl-item-chevron {
    @include disabled-state;
  }
}

:host ::ng-deep {
  @include checkbox(
    $input-selector: null,
    $checkbox-selector: '.btl-item-checkbox',
    $checked-selector: '.selected .btl-item-checkbox',
    $disabled-selector: null,
    $required-selector: null,
    $indeterminate-selector: '.indeterminate .btl-item-checkbox',
    $hover-selector:
      '.btl-item-option:hover .btl-item-checkbox, .btl-item-checkbox:hover, .btl-item-checkbox:focus'
  ) {
    position: relative;
    margin-right: $btl-icon-margin;
  }
}

// Elements

:host ::ng-deep {
  .btl-search {
    .bfe-wrap {
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;

      &,
      &.focused {
        border-top: 0;
        border-left: 0;
        border-right: 0;
      }

      &.focused {
        border-color: $border-color;
      }
    }

    &.no-results .bfe-wrap {
      border-bottom-left-radius: $border-radius;
      border-bottom-right-radius: $border-radius;
      border-width: 0;
    }
  }
}

.btl-footer {
  margin: 0;
}

.btl-selected-count {
  margin-left: 5px;
  font-weight: 400;
}

// States

.btl-item {
  &:hover,
  &:focus {
    background-color: $grey-100;
  }
}

:host::ng-deep {
  [aria-readonly='true'] .btl-item,
  [aria-disabled='true'] .btl-item,
  .btl-item.disabled {
    &:hover {
      background: none;
    }
  }

  [aria-readonly='true'] .btl-item-option,
  [aria-disabled='true'].btl-item-option,
  .btl-item-option.disabled {
    pointer-events: none;
  }

  [aria-readonly='true'],
  [aria-disabled='true'],
  .btl-item.disabled {
    .btl-item-checkbox,
    .btl-item-checkbox:before {
      pointer-events: none;
      cursor: default;
      box-shadow: none;
    }
  }
  [aria-disabled='true'],
  .disabled {
    .btl-item-checkbox,
    .btl-item-name,
    .btl-selected-count {
      opacity: 0.5;
    }
  }
}

:host::ng-deep {
  [data-type='single'] {
    .btl-item.selected {
      background-color: $color-option-selected;
      font-weight: $font-weight-bold-body;
    }
  }
}

[hidden] {
  display: none;
}

// Types

:host ::ng-deep {
  [data-type='single'] {
    .btl-item-chevron {
      cursor: pointer;

      &:hover:before {
        color: map-get-deep($icon-colors, 'dark', hover);
      }
    }
  }
}
