@import '../../style/common-imports';

$bel-item-height: 55px;
$bel-item-border-color: $grey-300;
$bel-item-dragged-bgcolor: $grey-100;
$bel-item-dragged-border-color: $grey-400;

:host {
  text-align: left;
}

.bel-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: times8(2);
}

.bel-reset-button {
  @include button-reset();
}

.custom-sorting {
  opacity: 0.5;

  &:hover,
  &:focus {
    opacity: 1;
  }
}

:host ::ng-deep {
  .smooth-dnd-draggable-wrapper {
    padding: 4px 0;
  }

  .smooth-dnd-container > .smooth-dnd-draggable-wrapper {
    overflow: visible;
  }
}

.bel-item {
  min-height: $bel-item-height;
  display: flex;
  align-items: center;
  border-radius: $border-radius;
  padding: 0 times8(2);
  @include b-body($color: $grey-700);
  background-color: white;
  user-select: none;
  transition: box-shadow 0.35s, background-color 0.2s;
  transition-timing-function: ease-in-out;

  cursor: move;
  cursor: grab;
  box-shadow: inset 0 0 0 1px $bel-item-border-color;

  &.focused {
    box-shadow: inset 0 0 0 1px $input-focus-border-color;
  }

  &-dragged {
    cursor: grabbing;
    background-color: $bel-item-dragged-bgcolor;
    box-shadow: 0 0 0 2px $bel-item-dragged-bgcolor,
      0 0 0 3px $bel-item-dragged-border-color, 0 3px 14px 0 black(0.2);

    &.focused {
      box-shadow: 0 0 0 2px $bel-item-dragged-bgcolor,
        0 0 0 3px $input-focus-border-color, 0 3px 14px 0 black(0.2);
    }
  }

  &:before {
    margin-right: 10px;
  }
}

.bfe-input {
  @include input-basics($padding: 0, $height: $bel-item-height);

  &:read-only {
    // pointer-events: none;
    user-select: none;
  }

  &:focus {
    box-shadow: 0 -1 0 0 $grey-100;
  }
}

.bel-item-menu {
  margin-left: auto;
}
